name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.23', '1.x']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}


    - name: Download dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -v ./...

    - name: Run vet
      run: go vet ./...

    - name: Run fmt check
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          gofmt -s -l .
          exit 1
        fi

  build-docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: cloudmailin-demo:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        # Start container
        docker run --rm -d --name test-container -p 8080:8080 cloudmailin-demo:latest
        sleep 5

        # Test HTTP endpoint with detailed output
        echo "## HTTP Response" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        if curl -s -I http://localhost:8080/ >> $GITHUB_STEP_SUMMARY && curl -s -o /dev/null -w "Status: %{http_code}\nTotal time: %{time_total}s\n" http://localhost:8080/ >> $GITHUB_STEP_SUMMARY; then
          echo "✅ Container is responding successfully" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Container failed to respond" >> $GITHUB_STEP_SUMMARY
          docker stop test-container
          exit 1
        fi
        echo '```' >> $GITHUB_STEP_SUMMARY

        # Show boot logs
        echo "## Container Boot Logs" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        docker logs test-container &> container-logs.txt
        cat container-logs.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

        docker stop test-container
